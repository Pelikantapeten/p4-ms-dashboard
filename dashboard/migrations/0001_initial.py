# Generated by Django 3.2.13 on 2022-07-13 12:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('staff', models.BooleanField(default=False, verbose_name='Mentor')),
                ('admin', models.BooleanField(default=False, verbose_name='Course manager')),
                ('name', models.CharField(blank=True, max_length=80, verbose_name='Name')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_program_start', models.DateField(blank=True, null=True, verbose_name='Program start date')),
                ('date_program_end', models.DateField(blank=True, null=True, verbose_name='Program end date')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='StudentMentorCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField(blank=True, help_text='Enter a summary of Student overall progress from Mentor perspective.', max_length=2000)),
                ('mentor', models.ManyToManyField(help_text='Select Mentor for this student', to='dashboard.Mentor')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField(blank=True, help_text='Enter a summary of session with student', max_length=2000)),
                ('session_date', models.DateField(blank=True, null=True, verbose_name='Session date')),
                ('type', models.CharField(blank=True, choices=[('i', 'Introduction'), ('1', 'Milestone Proj. 1'), ('2', 'Milestone Proj. 2'), ('3', 'Milestone Proj. 3'), ('4', 'Milestone Proj. 4'), ('5', 'Milestone Proj. 5')], default='i', help_text='Type of session', max_length=1, verbose_name='Type of session')),
                ('subject', models.CharField(blank=True, choices=[('1', 'Milestone meeting 1'), ('2', 'Milestone meeting 2'), ('3', 'Milestone meeting 3')], default='1', help_text='Type of subject', max_length=1, verbose_name='Type of subject')),
                ('StudentMentorCard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='dashboard.studentmentorcard')),
            ],
            options={
                'ordering': ['session_date'],
            },
        ),
    ]
